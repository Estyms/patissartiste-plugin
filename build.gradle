plugins {
	id 'fabric-loom' version '1.1-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven {
		name = "Nucleoid"
		url = 'https://maven.nucleoid.xyz'
	}
	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
	}

	maven { url 'https://maven.wispforest.io' }
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	annotationProcessor modImplementation("io.wispforest:owo-lib:${project.owo_version}")

	modImplementation "eu.pb4:polymer-core:0.6.2+1.20.2"
	modImplementation "xyz.nucleoid:server-translations-api:2.1.0+1.20.2-rc2"
	modCompileOnly "maven.modrinth:fallingtree:1.20.2-5.0.3"


	// Uncomment the following line to enable the deprecated Fabric API modules. 
	// These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {

	publications {
		maven(MavenPublication) {
			groupId = group
			artifactId = archivesBaseName
			version = version
			from components.java

			pom {
				name = "Ile des Artistes"
				description = "Un plugin minecraft pour le serveur de l'Ile des Artistes"
			}
		}
	}
}
